;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;void put(unsigned int data)
; 0000 0005 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0006     while((UCSR0A & 0x20) == 0);
;	data -> Y+0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0007     UDR0 = data;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0008     delay_ms(10);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0009     UDR0 = ('5');
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 000A     UCSR0A |= 0x20;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 000B }
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;
;void serial_init(void)
; 0000 000E {
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 000F     #asm("cli");
;PCODE: $00000023 VOL: 0
	cli
;PCODE: $00000024 VOL: 0
; 0000 0010     delay_ms(5);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0011     DDRE = 0x02;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0012     UCSR0A = 0;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0013     UCSR0B = 0b11011000;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0014     UCSR0C = 0b00000110;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0015     #asm("sei");
;PCODE: $00000030 VOL: 0
	sei
;PCODE: $00000031 VOL: 0
; 0000 0016     UBRR0H = 0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0017     UBRR0L = 103;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0018 }
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;
;void main(void)
; 0000 001B {
;PCODE: $00000038 VOL: 0
; 0000 001C     serial_init();
;PCODE: $00000039 VOL: 0
; 0000 001D     while(1){
;PCODE: $0000003A VOL: 0
; 0000 001E         put(0x02);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 001F         delay_ms(1000);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0020     }
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0021 }
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;
;
;
;interrupt [USART0_RXC] void uart_rcv(void)
; 0000 0026 {
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0027     unsigned int data;
; 0000 0028     data = UDR0;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;	data -> R16,R17
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0029     delay_ms(1);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 002A     put(data);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 002B }
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
